// /*!
//  FixedColumns 3.2.2
//  Â©2010-2016 SpryMedia Ltd - datatables.net/license
// */
// (function (d) { "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (q) { return d(q, window, document) }) : "object" === typeof exports ? module.exports = function (q, r) { q || (q = window); if (!r || !r.fn.dataTable) r = require("datatables.net")(q, r).$; return d(r, q, q.document) } : d(jQuery, window, document) })(function (d, q, r, t) {
//     var s = d.fn.dataTable, u, m = function (a, b) {
//         var c = this; if (this instanceof m) {
//             if (b === t || !0 === b) b = {}; var e = d.fn.dataTable.camelToHungarian; e && (e(m.defaults, m.defaults, !0), e(m.defaults,
//                 b)); e = (new d.fn.dataTable.Api(a)).settings()[0]; this.s = { dt: e, iTableColumns: e.aoColumns.length, aiOuterWidths: [], aiInnerWidths: [], rtl: "rtl" === d(e.nTable).css("direction") }; this.dom = { scroller: null, header: null, body: null, footer: null, grid: { wrapper: null, dt: null, left: { wrapper: null, head: null, body: null, foot: null }, right: { wrapper: null, head: null, body: null, foot: null } }, clone: { left: { header: null, body: null, footer: null }, right: { header: null, body: null, footer: null } } }; if (e._oFixedColumns) throw "FixedColumns already initialised on this table";
//             e._oFixedColumns = this; e._bInitComplete ? this._fnConstruct(b) : e.oApi._fnCallbackReg(e, "aoInitComplete", function () { c._fnConstruct(b) }, "FixedColumns")
//         } else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.")
//     }; d.extend(m.prototype, {
//         fnUpdate: function () { this._fnDraw(!0) }, fnRedrawLayout: function () { this._fnColCalc(); this._fnGridLayout(); this.fnUpdate() }, fnRecalculateHeight: function (a) { delete a._DTTC_iHeight; a.style.height = "auto" }, fnSetRowHeight: function (a, b) {
//             a.style.height =
//                 b + "px"
//         }, fnGetPosition: function (a) { var b = this.s.dt.oInstance; if (d(a).parents(".DTFC_Cloned").length) { if ("tr" === a.nodeName.toLowerCase()) return a = d(a).index(), b.fnGetPosition(d("tr", this.s.dt.nTBody)[a]); var c = d(a).index(), a = d(a.parentNode).index(); return [b.fnGetPosition(d("tr", this.s.dt.nTBody)[a]), c, b.oApi._fnVisibleToColumnIndex(this.s.dt, c)] } return b.fnGetPosition(a) }, _fnConstruct: function (a) {
//             var b = this; if ("function" != typeof this.s.dt.oInstance.fnVersionCheck || !0 !== this.s.dt.oInstance.fnVersionCheck("1.8.0")) alert("FixedColumns " +
//                 m.VERSION + " required DataTables 1.8.0 or later. Please upgrade your DataTables installation"); else if ("" === this.s.dt.oScroll.sX) this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, "FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled"); else {
//                     this.s = d.extend(!0, this.s, m.defaults, a); a = this.s.dt.oClasses; this.dom.grid.dt = d(this.s.dt.nTable).parents("div." + a.sScrollWrapper)[0]; this.dom.scroller = d("div." +
//                         a.sScrollBody, this.dom.grid.dt)[0]; this._fnColCalc(); this._fnGridSetup(); var c, e = !1; d(this.s.dt.nTableWrapper).on("mousedown.DTFC", function () { e = !0; d(r).one("mouseup", function () { e = !1 }) }); d(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC", function () { e || (c = "main") }).on("scroll.DTFC", function (a) { !c && a.originalEvent && (c = "main"); if ("main" === c && (0 < b.s.iLeftColumns && (b.dom.grid.left.liner.scrollTop = b.dom.scroller.scrollTop), 0 < b.s.iRightColumns)) b.dom.grid.right.liner.scrollTop = b.dom.scroller.scrollTop });
//                     var f = "onwheel" in r.createElement("div") ? "wheel.DTFC" : "mousewheel.DTFC"; if (0 < b.s.iLeftColumns) d(b.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC", function () { e || (c = "left") }).on("scroll.DTFC", function (a) { !c && a.originalEvent && (c = "left"); "left" === c && (b.dom.scroller.scrollTop = b.dom.grid.left.liner.scrollTop, 0 < b.s.iRightColumns && (b.dom.grid.right.liner.scrollTop = b.dom.grid.left.liner.scrollTop)) }).on(f, function (a) { b.dom.scroller.scrollLeft -= "wheel" === a.type ? -a.originalEvent.deltaX : a.originalEvent.wheelDeltaX });
//                     if (0 < b.s.iRightColumns) d(b.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC", function () { e || (c = "right") }).on("scroll.DTFC", function (a) { !c && a.originalEvent && (c = "right"); "right" === c && (b.dom.scroller.scrollTop = b.dom.grid.right.liner.scrollTop, 0 < b.s.iLeftColumns && (b.dom.grid.left.liner.scrollTop = b.dom.grid.right.liner.scrollTop)) }).on(f, function (a) { b.dom.scroller.scrollLeft -= "wheel" === a.type ? -a.originalEvent.deltaX : a.originalEvent.wheelDeltaX }); d(q).on("resize.DTFC", function () { b._fnGridLayout.call(b) });
//                     var g = !0, h = d(this.s.dt.nTable); h.on("draw.dt.DTFC", function () { b._fnColCalc(); b._fnDraw.call(b, g); g = !1 }).on("column-sizing.dt.DTFC", function () { b._fnColCalc(); b._fnGridLayout(b) }).on("column-visibility.dt.DTFC", function (a, c, d, e, f) { if (f === t || f) b._fnColCalc(), b._fnGridLayout(b), b._fnDraw(!0) }).on("select.dt.DTFC deselect.dt.DTFC", function (a) { "dt" === a.namespace && b._fnDraw(!1) }).on("destroy.dt.DTFC", function () {
//                         h.off(".DTFC"); d(b.dom.scroller).off(".DTFC"); d(q).off(".DTFC"); d(b.s.dt.nTableWrapper).off(".DTFC");
//                         d(b.dom.grid.left.liner).off(".DTFC " + f); d(b.dom.grid.left.wrapper).remove(); d(b.dom.grid.right.liner).off(".DTFC " + f); d(b.dom.grid.right.wrapper).remove()
//                     }); this._fnGridLayout(); this.s.dt.oInstance.fnDraw(!1)
//                 }
//         }, _fnColCalc: function () {
//             var a = this, b = 0, c = 0; this.s.aiInnerWidths = []; this.s.aiOuterWidths = []; d.each(this.s.dt.aoColumns, function (e, f) {
//                 var g = d(f.nTh), h; if (g.filter(":visible").length) {
//                     var i = g.outerWidth(); 0 === a.s.aiOuterWidths.length && (h = d(a.s.dt.nTable).css("border-left-width"), i += "string" ===
//                         typeof h ? 1 : parseInt(h, 10)); a.s.aiOuterWidths.length === a.s.dt.aoColumns.length - 1 && (h = d(a.s.dt.nTable).css("border-right-width"), i += "string" === typeof h ? 1 : parseInt(h, 10)); a.s.aiOuterWidths.push(i); a.s.aiInnerWidths.push(g.width()); e < a.s.iLeftColumns && (b += i); a.s.iTableColumns - a.s.iRightColumns <= e && (c += i)
//                 } else a.s.aiInnerWidths.push(0), a.s.aiOuterWidths.push(0)
//             }); this.s.iLeftWidth = b; this.s.iRightWidth = c
//         }, _fnGridSetup: function () {
//             var a = this._fnDTOverflow(), b; this.dom.body = this.s.dt.nTable; this.dom.header =
//                 this.s.dt.nTHead.parentNode; this.dom.header.parentNode.parentNode.style.position = "relative"; var c = d('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; right:0;"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0],
//                     e = c.childNodes[0], f = c.childNodes[1]; this.dom.grid.dt.parentNode.insertBefore(c, this.dom.grid.dt); c.appendChild(this.dom.grid.dt); this.dom.grid.wrapper = c; 0 < this.s.iLeftColumns && (this.dom.grid.left.wrapper = e, this.dom.grid.left.head = e.childNodes[0], this.dom.grid.left.body = e.childNodes[1], this.dom.grid.left.liner = d("div.DTFC_LeftBodyLiner", c)[0], c.appendChild(e)); 0 < this.s.iRightColumns && (this.dom.grid.right.wrapper = f, this.dom.grid.right.head = f.childNodes[0], this.dom.grid.right.body = f.childNodes[1], this.dom.grid.right.liner =
//                         d("div.DTFC_RightBodyLiner", c)[0], f.style.right = a.bar + "px", b = d("div.DTFC_RightHeadBlocker", c)[0], b.style.width = a.bar + "px", b.style.right = -a.bar + "px", this.dom.grid.right.headBlock = b, b = d("div.DTFC_RightFootBlocker", c)[0], b.style.width = a.bar + "px", b.style.right = -a.bar + "px", this.dom.grid.right.footBlock = b, c.appendChild(f)); if (this.s.dt.nTFoot && (this.dom.footer = this.s.dt.nTFoot.parentNode, 0 < this.s.iLeftColumns && (this.dom.grid.left.foot = e.childNodes[2]), 0 < this.s.iRightColumns)) this.dom.grid.right.foot = f.childNodes[2];
//             this.s.rtl && d("div.DTFC_RightHeadBlocker", c).css({ left: -a.bar + "px", right: "" })
//         }, _fnGridLayout: function () {
//             var a = this, b = this.dom.grid; d(b.wrapper).width(); var c = d(this.s.dt.nTable.parentNode).outerHeight(), e = d(this.s.dt.nTable.parentNode.parentNode).outerHeight(), f = this._fnDTOverflow(), g = this.s.iLeftWidth, h = this.s.iRightWidth, i = "rtl" === d(this.dom.body).css("direction"), j = function (b, c) {
//                 f.bar ? a._firefoxScrollError() ? 34 < d(b).height() && (b.style.width = c + f.bar + "px") : b.style.width = c + f.bar + "px" : (b.style.width =
//                     c + 20 + "px", b.style.paddingRight = "20px", b.style.boxSizing = "border-box")
//             }; f.x && (c -= f.bar); b.wrapper.style.height = e + "px"; 0 < this.s.iLeftColumns && (e = b.left.wrapper, e.style.width = g + "px", e.style.height = "1px", i ? (e.style.left = "", e.style.right = 0) : (e.style.left = 0, e.style.right = ""), b.left.body.style.height = c + "px", b.left.foot && (b.left.foot.style.top = (f.x ? f.bar : 0) + "px"), j(b.left.liner, g), b.left.liner.style.height = c + "px"); 0 < this.s.iRightColumns && (e = b.right.wrapper, e.style.width = h + "px", e.style.height = "1px", this.s.rtl ?
//                 (e.style.left = f.y ? f.bar + "px" : 0, e.style.right = "") : (e.style.left = "", e.style.right = f.y ? f.bar + "px" : 0), b.right.body.style.height = c + "px", b.right.foot && (b.right.foot.style.top = (f.x ? f.bar : 0) + "px"), j(b.right.liner, h), b.right.liner.style.height = c + "px", b.right.headBlock.style.display = f.y ? "block" : "none", b.right.footBlock.style.display = f.y ? "block" : "none")
//         }, _fnDTOverflow: function () {
//             var a = this.s.dt.nTable, b = a.parentNode, c = { x: !1, y: !1, bar: this.s.dt.oScroll.iBarWidth }; a.offsetWidth > b.clientWidth && (c.x = !0); a.offsetHeight >
//                 b.clientHeight && (c.y = !0); return c
//         }, _fnDraw: function (a) { this._fnGridLayout(); this._fnCloneLeft(a); this._fnCloneRight(a); null !== this.s.fnDrawCallback && this.s.fnDrawCallback.call(this, this.dom.clone.left, this.dom.clone.right); d(this).trigger("draw.dtfc", { leftClone: this.dom.clone.left, rightClone: this.dom.clone.right }) }, _fnCloneRight: function (a) {
//             if (!(0 >= this.s.iRightColumns)) {
//                 var b, c = []; for (b = this.s.iTableColumns - this.s.iRightColumns; b < this.s.iTableColumns; b++)this.s.dt.aoColumns[b].bVisible && c.push(b);
//                 this._fnClone(this.dom.clone.right, this.dom.grid.right, c, a)
//             }
//         }, _fnCloneLeft: function (a) { if (!(0 >= this.s.iLeftColumns)) { var b, c = []; for (b = 0; b < this.s.iLeftColumns; b++)this.s.dt.aoColumns[b].bVisible && c.push(b); this._fnClone(this.dom.clone.left, this.dom.grid.left, c, a) } }, _fnCopyLayout: function (a, b, c) {
//             for (var e = [], f = [], g = [], h = 0, i = a.length; h < i; h++) {
//                 var j = []; j.nTr = d(a[h].nTr).clone(c, !1)[0]; for (var l = 0, o = this.s.iTableColumns; l < o; l++)if (-1 !== d.inArray(l, b)) {
//                     var p = d.inArray(a[h][l].cell, g); -1 === p ? (p = d(a[h][l].cell).clone(c,
//                         !1)[0], f.push(p), g.push(a[h][l].cell), j.push({ cell: p, unique: a[h][l].unique })) : j.push({ cell: f[p], unique: a[h][l].unique })
//                 } e.push(j)
//             } return e
//         }, _fnClone: function (a, b, c, e) {
//             var f = this, g, h, i, j, l, o, p, n, m, k = this.s.dt; if (e) {
//                 d(a.header).remove(); a.header = d(this.dom.header).clone(!0, !1)[0]; a.header.className += " DTFC_Cloned"; a.header.style.width = "100%"; b.head.appendChild(a.header); n = this._fnCopyLayout(k.aoHeader, c, !0); j = d(">thead", a.header); j.empty(); g = 0; for (h = n.length; g < h; g++)j[0].appendChild(n[g].nTr); k.oApi._fnDrawHead(k,
//                     n, !0)
//             } else { n = this._fnCopyLayout(k.aoHeader, c, !1); m = []; k.oApi._fnDetectHeader(m, d(">thead", a.header)[0]); g = 0; for (h = n.length; g < h; g++) { i = 0; for (j = n[g].length; i < j; i++)m[g][i].cell.className = n[g][i].cell.className, d("span.DataTables_sort_icon", m[g][i].cell).each(function () { this.className = d("span.DataTables_sort_icon", n[g][i].cell)[0].className }) } } this._fnEqualiseHeights("thead", this.dom.header, a.header); "auto" == this.s.sHeightMatch && d(">tbody>tr", f.dom.body).css("height", "auto"); null !== a.body && (d(a.body).remove(),
//                 a.body = null); a.body = d(this.dom.body).clone(!0)[0]; a.body.className += " DTFC_Cloned"; a.body.style.paddingBottom = k.oScroll.iBarWidth + "px"; a.body.style.marginBottom = 2 * k.oScroll.iBarWidth + "px"; null !== a.body.getAttribute("id") && a.body.removeAttribute("id"); d(">thead>tr", a.body).empty(); d(">tfoot", a.body).remove(); var q = d("tbody", a.body)[0]; d(q).empty(); if (0 < k.aiDisplay.length) {
//                     h = d(">thead>tr", a.body)[0]; for (p = 0; p < c.length; p++)l = c[p], o = d(k.aoColumns[l].nTh).clone(!0)[0], o.innerHTML = "", j = o.style, j.paddingTop =
//                         "0", j.paddingBottom = "0", j.borderTopWidth = "0", j.borderBottomWidth = "0", j.height = 0, j.width = f.s.aiInnerWidths[l] + "px", h.appendChild(o); d(">tbody>tr", f.dom.body).each(function (a) {
//                             var a = f.s.dt.oFeatures.bServerSide === false ? f.s.dt.aiDisplay[f.s.dt._iDisplayStart + a] : a, b = f.s.dt.aoData[a].anCells || d(this).children("td, th"), e = this.cloneNode(false); e.removeAttribute("id"); e.setAttribute("data-dt-row", a); for (p = 0; p < c.length; p++) {
//                                 l = c[p]; if (b.length > 0) {
//                                     o = d(b[l]).clone(true, true)[0]; o.setAttribute("data-dt-row",
//                                         a); o.setAttribute("data-dt-column", p); e.appendChild(o)
//                                 }
//                             } q.appendChild(e)
//                         })
//                 } else d(">tbody>tr", f.dom.body).each(function () { o = this.cloneNode(true); o.className = o.className + " DTFC_NoData"; d("td", o).html(""); q.appendChild(o) }); a.body.style.width = "100%"; a.body.style.margin = "0"; a.body.style.padding = "0"; k.oScroller !== t && (h = k.oScroller.dom.force, b.forcer ? b.forcer.style.height = h.style.height : (b.forcer = h.cloneNode(!0), b.liner.appendChild(b.forcer))); b.liner.appendChild(a.body); this._fnEqualiseHeights("tbody",
//                     f.dom.body, a.body); if (null !== k.nTFoot) {
//                         if (e) { null !== a.footer && a.footer.parentNode.removeChild(a.footer); a.footer = d(this.dom.footer).clone(!0, !0)[0]; a.footer.className += " DTFC_Cloned"; a.footer.style.width = "100%"; b.foot.appendChild(a.footer); n = this._fnCopyLayout(k.aoFooter, c, !0); b = d(">tfoot", a.footer); b.empty(); g = 0; for (h = n.length; g < h; g++)b[0].appendChild(n[g].nTr); k.oApi._fnDrawHead(k, n, !0) } else {
//                             n = this._fnCopyLayout(k.aoFooter, c, !1); b = []; k.oApi._fnDetectHeader(b, d(">tfoot", a.footer)[0]); g = 0; for (h = n.length; g <
//                                 h; g++) { i = 0; for (j = n[g].length; i < j; i++)b[g][i].cell.className = n[g][i].cell.className }
//                         } this._fnEqualiseHeights("tfoot", this.dom.footer, a.footer)
//                     } b = k.oApi._fnGetUniqueThs(k, d(">thead", a.header)[0]); d(b).each(function (a) { l = c[a]; this.style.width = f.s.aiInnerWidths[l] + "px" }); null !== f.s.dt.nTFoot && (b = k.oApi._fnGetUniqueThs(k, d(">tfoot", a.footer)[0]), d(b).each(function (a) { l = c[a]; this.style.width = f.s.aiInnerWidths[l] + "px" }))
//         }, _fnGetTrNodes: function (a) {
//             for (var b = [], c = 0, d = a.childNodes.length; c < d; c++)"TR" == a.childNodes[c].nodeName.toUpperCase() &&
//                 b.push(a.childNodes[c]); return b
//         }, _fnEqualiseHeights: function (a, b, c) {
//             if (!("none" == this.s.sHeightMatch && "thead" !== a && "tfoot" !== a)) {
//                 var e, f, g = b.getElementsByTagName(a)[0], c = c.getElementsByTagName(a)[0], a = d(">" + a + ">tr:eq(0)", b).children(":first"); a.outerHeight(); a.height(); for (var g = this._fnGetTrNodes(g), b = this._fnGetTrNodes(c), h = [], c = 0, a = b.length; c < a; c++)e = g[c].offsetHeight, f = b[c].offsetHeight, e = f > e ? f : e, "semiauto" == this.s.sHeightMatch && (g[c]._DTTC_iHeight = e), h.push(e); c = 0; for (a = b.length; c < a; c++)b[c].style.height =
//                     h[c] + "px", g[c].style.height = h[c] + "px"
//             }
//         }, _firefoxScrollError: function () { if (u === t) { var a = d("<div/>").css({ position: "absolute", top: 0, left: 0, height: 10, width: 50, overflow: "scroll" }).appendTo("body"); u = a[0].clientWidth === a[0].offsetWidth && 0 !== this._fnDTOverflow().bar; a.remove() } return u }
//     }); m.defaults = { iLeftColumns: 1, iRightColumns: 0, fnDrawCallback: null, sHeightMatch: "semiauto" }; m.version = "3.2.2"; s.Api.register("fixedColumns()", function () { return this }); s.Api.register("fixedColumns().update()", function () {
//         return this.iterator("table",
//             function (a) { a._oFixedColumns && a._oFixedColumns.fnUpdate() })
//     }); s.Api.register("fixedColumns().relayout()", function () { return this.iterator("table", function (a) { a._oFixedColumns && a._oFixedColumns.fnRedrawLayout() }) }); s.Api.register("rows().recalcHeight()", function () { return this.iterator("row", function (a, b) { a._oFixedColumns && a._oFixedColumns.fnRecalculateHeight(this.row(b).node()) }) }); s.Api.register("fixedColumns().rowIndex()", function (a) {
//         a = d(a); return a.parents(".DTFC_Cloned").length ? this.rows({ page: "current" }).indexes()[a.index()] :
//             this.row(a).index()
//     }); s.Api.register("fixedColumns().cellIndex()", function (a) { a = d(a); if (a.parents(".DTFC_Cloned").length) { var b = a.parent().index(), b = this.rows({ page: "current" }).indexes()[b], a = a.parents(".DTFC_LeftWrapper").length ? a.index() : this.columns().flatten().length - this.context[0]._oFixedColumns.s.iRightColumns + a.index(); return { row: b, column: this.column.index("toData", a), columnVisible: a } } return this.cell(a).index() }); d(r).on("init.dt.fixedColumns", function (a, b) {
//         if ("dt" === a.namespace) {
//             var c = b.oInit.fixedColumns,
//                 e = s.defaults.fixedColumns; if (c || e) e = d.extend({}, c, e), !1 !== c && new m(b, e)
//         }
//     }); d.fn.dataTable.FixedColumns = m; return d.fn.DataTable.FixedColumns = m
// });

/*! FixedColumns 4.2.2
 * © SpryMedia Ltd - datatables.net/license
 */
!(function (e) {
    var i, l;
    "function" == typeof define && define.amd
        ? define(["jquery", "datatables.net"], function (t) {
            return e(t, window, document);
        })
        : "object" == typeof exports
            ? ((i = require("jquery")),
                (l = function (t, s) {
                    s.fn.dataTable || require("datatables.net")(t, s);
                }),
                "undefined" != typeof window
                    ? (module.exports = function (t, s) {
                        return (
                            (t = t || window), (s = s || i(t)), l(t, s), e(s, 0, t.document)
                        );
                    })
                    : (l(window, i), (module.exports = e(i, window, window.document))))
            : e(jQuery, window, document);
})(function (l, t, s, F) {
    "use strict";
    var A,
        i,
        e,
        o,
        r = l.fn.dataTable;
    function d(t, s) {
        var e = this;
        if (i && i.versionCheck && i.versionCheck("1.10.0"))
            return (
                (t = new i.Api(t)),
                (this.classes = A.extend(!0, {}, d.classes)),
                (this.c = A.extend(!0, {}, d.defaults, s)),
                (s && s.left !== F) ||
                this.c.leftColumns === F ||
                (this.c.left = this.c.leftColumns),
                (s && s.right !== F) ||
                this.c.rightColumns === F ||
                (this.c.right = this.c.rightColumns),
                (this.s = {
                    barWidth: 0,
                    dt: t,
                    rtl: "rtl" === A("body").css("direction"),
                }),
                (s = {
                    bottom: "0px",
                    display: "block",
                    position: "absolute",
                    width: this.s.barWidth + 1 + "px",
                }),
                (this.dom = {
                    leftBottomBlocker: A("<div>")
                        .css(s)
                        .css("left", 0)
                        .addClass(this.classes.leftBottomBlocker),
                    leftTopBlocker: A("<div>")
                        .css(s)
                        .css({ left: 0, top: 0 })
                        .addClass(this.classes.leftTopBlocker),
                    rightBottomBlocker: A("<div>")
                        .css(s)
                        .css("right", 0)
                        .addClass(this.classes.rightBottomBlocker),
                    rightTopBlocker: A("<div>")
                        .css(s)
                        .css({ right: 0, top: 0 })
                        .addClass(this.classes.rightTopBlocker),
                }),
                this.s.dt.settings()[0]._bInitComplete
                    ? (this._addStyles(), this._setKeyTableListener())
                    : t.one("init.dt", function () {
                        e._addStyles(), e._setKeyTableListener();
                    }),
                t.on("column-sizing.dt", function () {
                    return e._addStyles();
                }),
                (t.settings()[0]._fixedColumns = this)
            );
        throw new Error("StateRestore requires DataTables 1.10 or newer");
    }
    function h(t, s) {
        void 0 === s && (s = null);
        (t = new r.Api(t)),
            (s = s || t.init().fixedColumns || r.defaults.fixedColumns);
        new e(t, s);
    }
    return (
        (d.prototype.left = function (t) {
            return t !== F && ((this.c.left = t), this._addStyles()), this.c.left;
        }),
        (d.prototype.right = function (t) {
            return t !== F && ((this.c.right = t), this._addStyles()), this.c.right;
        }),
        (d.prototype._addStyles = function () {
            this.s.dt.settings()[0].oScroll.sY &&
                ((s = A(this.s.dt.table().node()).closest(
                    "div.dataTables_scrollBody"
                )[0]),
                    (e = this.s.dt.settings()[0].oBrowser.barWidth),
                    s.offsetWidth - s.clientWidth >= e
                        ? (this.s.barWidth = e)
                        : (this.s.barWidth = 0),
                    this.dom.rightTopBlocker.css("width", this.s.barWidth + 1),
                    this.dom.leftTopBlocker.css("width", this.s.barWidth + 1),
                    this.dom.rightBottomBlocker.css("width", this.s.barWidth + 1),
                    this.dom.leftBottomBlocker.css("width", this.s.barWidth + 1));
            for (
                var t = null,
                s = this.s.dt.column(0).header(),
                e = null,
                i =
                    (null !== s &&
                        ((e = (s = A(s)).outerHeight() + 1),
                            (t = A(s.closest("div.dataTables_scroll")).css(
                                "position",
                                "relative"
                            ))),
                        this.s.dt.column(0).footer()),
                l = null,
                o =
                    (null !== i &&
                        ((l = (i = A(i)).outerHeight()), null === t) &&
                        (t = A(i.closest("div.dataTables_scroll")).css(
                            "position",
                            "relative"
                        )),
                        this.s.dt.columns().data().toArray().length),
                r = 0,
                d = 0,
                h = A(this.s.dt.table().node()).children("tbody").children("tr"),
                n = 0,
                a = new Map(),
                c = 0;
                c < o;
                c++
            ) {
                var f = this.s.dt.column(c);
                if ((0 < c && a.set(c - 1, n), f.visible())) {
                    var u = A(f.header()),
                        g = A(f.footer());
                    if (c - n < this.c.left) {
                        if (
                            (A(this.s.dt.table().node()).addClass(
                                this.classes.tableFixedLeft
                            ),
                                t.addClass(this.classes.tableFixedLeft),
                                0 < c - n)
                        )
                            for (var C = c; C + 1 < o;) {
                                if (
                                    (y = this.s.dt.column(C - 1, { page: "current" })).visible()
                                ) {
                                    (r += A(y.nodes()[0]).outerWidth()),
                                        (d +=
                                            y.header() || y.footer()
                                                ? A(y.header()).outerWidth()
                                                : 0);
                                    break;
                                }
                                C--;
                            }
                        for (var m = 0, p = h; m < p.length; m++) {
                            var x = p[m];
                            A(A(x).children()[c - n])
                                .css(this._getCellCSS(!1, r, "left"))
                                .addClass(this.classes.fixedLeft);
                        }
                        u
                            .css(this._getCellCSS(!0, d, "left"))
                            .addClass(this.classes.fixedLeft),
                            g
                                .css(this._getCellCSS(!0, d, "left"))
                                .addClass(this.classes.fixedLeft);
                    } else {
                        for (var b = 0, v = h; b < v.length; b++) {
                            x = v[b];
                            (R = A(A(x).children()[c - n])).hasClass(
                                this.classes.fixedLeft
                            ) &&
                                R.css(this._clearCellCSS("left")).removeClass(
                                    this.classes.fixedLeft
                                );
                        }
                        u.hasClass(this.classes.fixedLeft) &&
                            u
                                .css(this._clearCellCSS("left"))
                                .removeClass(this.classes.fixedLeft),
                            g.hasClass(this.classes.fixedLeft) &&
                            g
                                .css(this._clearCellCSS("left"))
                                .removeClass(this.classes.fixedLeft);
                    }
                } else n++;
            }
            for (var B = 0, S = 0, _ = 0, c = o - 1; 0 <= c; c--)
                if ((f = this.s.dt.column(c)).visible()) {
                    var u = A(f.header()),
                        g = A(f.footer()),
                        k = a.get(c);
                    if ((k === F && (k = n), c + _ >= o - this.c.right)) {
                        if (
                            (A(this.s.dt.table().node()).addClass(
                                this.classes.tableFixedRight
                            ),
                                t.addClass(this.classes.tableFixedRight),
                                c + 1 + _ < o)
                        )
                            for (var y, C = c; C + 1 < o;) {
                                if (
                                    (y = this.s.dt.column(C + 1, { page: "current" })).visible()
                                ) {
                                    (B += A(y.nodes()[0]).outerWidth()),
                                        (S +=
                                            y.header() || y.footer()
                                                ? A(y.header()).outerWidth()
                                                : 0);
                                    break;
                                }
                                C++;
                            }
                        for (var w = 0, T = h; w < T.length; w++) {
                            x = T[w];
                            A(A(x).children()[c - k])
                                .css(this._getCellCSS(!1, B, "right"))
                                .addClass(this.classes.fixedRight);
                        }
                        u
                            .css(this._getCellCSS(!0, S, "right"))
                            .addClass(this.classes.fixedRight),
                            g
                                .css(this._getCellCSS(!0, S, "right"))
                                .addClass(this.classes.fixedRight);
                    } else {
                        for (var L = 0, W = h; L < W.length; L++) {
                            var R,
                                x = W[L];
                            (R = A(A(x).children()[c - k])).hasClass(
                                this.classes.fixedRight
                            ) &&
                                R.css(this._clearCellCSS("right")).removeClass(
                                    this.classes.fixedRight
                                );
                        }
                        u.hasClass(this.classes.fixedRight) &&
                            u
                                .css(this._clearCellCSS("right"))
                                .removeClass(this.classes.fixedRight),
                            g.hasClass(this.classes.fixedRight) &&
                            g
                                .css(this._clearCellCSS("right"))
                                .removeClass(this.classes.fixedRight);
                    }
                } else _++;
            s &&
                (this.s.rtl
                    ? (this.dom.leftTopBlocker.outerHeight(e),
                        t.append(this.dom.leftTopBlocker))
                    : (this.dom.rightTopBlocker.outerHeight(e),
                        t.append(this.dom.rightTopBlocker))),
                i &&
                (this.s.rtl
                    ? (this.dom.leftBottomBlocker.outerHeight(l),
                        t.append(this.dom.leftBottomBlocker))
                    : (this.dom.rightBottomBlocker.outerHeight(l),
                        t.append(this.dom.rightBottomBlocker)));
        }),
        (d.prototype._getCellCSS = function (t, s, e) {
            return "left" === e
                ? this.s.rtl
                    ? { position: "sticky", right: s + "px" }
                    : { left: s + "px", position: "sticky" }
                : this.s.rtl
                    ? { left: s + (t ? this.s.barWidth : 0) + "px", position: "sticky" }
                    : { position: "sticky", right: s + (t ? this.s.barWidth : 0) + "px" };
        }),
        (d.prototype._clearCellCSS = function (t) {
            return "left" === t
                ? this.s.rtl
                    ? { position: "", right: "" }
                    : { left: "", position: "" }
                : this.s.rtl
                    ? { left: "", position: "" }
                    : { position: "", right: "" };
        }),
        (d.prototype._setKeyTableListener = function () {
            var h = this;
            this.s.dt.on("key-focus", function (t, s, e) {
                var i,
                    l,
                    o,
                    r = A(e.node()).offset(),
                    d = A(A(h.s.dt.table().node()).closest("div.dataTables_scrollBody"));
                0 < h.c.left &&
                    ((i = (l = A(h.s.dt.column(h.c.left - 1).header())).offset()),
                        (l = l.outerWidth()),
                        r.left < i.left + l) &&
                    ((o = d.scrollLeft()), d.scrollLeft(o - (i.left + l - r.left))),
                    0 < h.c.right &&
                    ((i = h.s.dt.columns().data().toArray().length),
                        (l = A(e.node()).outerWidth()),
                        (e = A(h.s.dt.column(i - h.c.right).header()).offset()),
                        r.left + l > e.left) &&
                    ((o = d.scrollLeft()), d.scrollLeft(o - (e.left - (r.left + l))));
            }),
                this.s.dt.on("draw", function () {
                    h._addStyles();
                }),
                this.s.dt.on("column-reorder", function () {
                    h._addStyles();
                }),
                this.s.dt.on("column-visibility", function (t, s, e, i, l) {
                    l &&
                        !s.bDestroying &&
                        setTimeout(function () {
                            h._addStyles();
                        }, 50);
                });
        }),
        (d.version = "4.2.2"),
        (d.classes = {
            fixedLeft: "dtfc-fixed-left",
            fixedRight: "dtfc-fixed-right",
            leftBottomBlocker: "dtfc-left-bottom-blocker",
            leftTopBlocker: "dtfc-left-top-blocker",
            rightBottomBlocker: "dtfc-right-bottom-blocker",
            rightTopBlocker: "dtfc-right-top-blocker",
            tableFixedLeft: "dtfc-has-left",
            tableFixedRight: "dtfc-has-right",
        }),
        (d.defaults = { i18n: { button: "FixedColumns" }, left: 1, right: 0 }),
        (e = d),
        (i = (A = l).fn.dataTable),
        (l.fn.dataTable.FixedColumns = e),
        (l.fn.DataTable.FixedColumns = e),
        (o = r.Api.register)("fixedColumns()", function () {
            return this;
        }),
        o("fixedColumns().left()", function (t) {
            var s = this.context[0];
            return t !== F ? (s._fixedColumns.left(t), this) : s._fixedColumns.left();
        }),
        o("fixedColumns().right()", function (t) {
            var s = this.context[0];
            return t !== F
                ? (s._fixedColumns.right(t), this)
                : s._fixedColumns.right();
        }),
        (r.ext.buttons.fixedColumns = {
            action: function (t, s, e, i) {
                l(e).attr("active")
                    ? (l(e).removeAttr("active").removeClass("active"),
                        s.fixedColumns().left(0),
                        s.fixedColumns().right(0))
                    : (l(e).attr("active", "true").addClass("active"),
                        s.fixedColumns().left(i.config.left),
                        s.fixedColumns().right(i.config.right));
            },
            config: { left: 1, right: 0 },
            init: function (t, s, e) {
                t.settings()[0]._fixedColumns === F && h(t.settings(), e),
                    l(s).attr("active", "true").addClass("active"),
                    t
                        .button(s)
                        .text(
                            e.text ||
                            t.i18n(
                                "buttons.fixedColumns",
                                t.settings()[0]._fixedColumns.c.i18n.button
                            )
                        );
            },
            text: null,
        }),
        l(s).on("plugin-init.dt", function (t, s) {
            "dt" !== t.namespace ||
                (!s.oInit.fixedColumns && !r.defaults.fixedColumns) ||
                s._fixedColumns ||
                h(s, null);
        }),
        r
    );
});
